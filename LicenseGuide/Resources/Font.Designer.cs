//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LicenseGuide.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Font {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Font() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LicenseGuide.Resources.Font", typeof(Font).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No, I want my font to be shared and come to use, even if it carries the risk that I won&apos;t be acknowledged as the font&apos;s creator..
        /// </summary>
        public static string attribution_no {
            get {
                return ResourceManager.GetString("attribution_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppose someone you despise distributes your font. Nowhere do they state that you are the creator of the font. Do you want this to be illegal?.
        /// </summary>
        public static string attribution_question {
            get {
                return ResourceManager.GetString("attribution_question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes, they can use my font in printed material and the like without mentioning my name, but in order to distribute my font, I want them to be forced to acknowledge me as the font&apos;s creator..
        /// </summary>
        public static string attribution_yes {
            get {
                return ResourceManager.GetString("attribution_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Creative Commons family of public copyright licenses has the primary goal of promoting free culture and open content. That&apos;s why they have developed several licenses with careful legal language and varying terms and conditions, to allow creators who want to contribute to choose a license that suits their needs.
        ///
        ///By licensing/marking your font as CC0, you indicate your intention to permanently waive all copyright, to the fullest extent permitted by law, without any requirement for compensation or attri [rest of string was truncated]&quot;;.
        /// </summary>
        public static string cc0_explanation {
            get {
                return ResourceManager.GetString("cc0_explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This font is licensed/marked as CC0 1.0 Universal. To view a copy of this
        ///license, visit: https://creativecommons.org/publicdomain/zero/1.0/
        ///
        ///To the extent possible under law, [your name] has waived all copyright and
        ///related or neighboring rights to this font. This work is published from:
        ///[your country].
        ///
        ///THE FONT IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        ///IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        ///FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT [rest of string was truncated]&quot;;.
        /// </summary>
        public static string cc0_text {
            get {
                return ResourceManager.GetString("cc0_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to CC0 1.0 Universal.
        /// </summary>
        public static string cc0_title {
            get {
                return ResourceManager.GetString("cc0_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No, I want my font to be distributed and come to use through a public agreement, even if it means that someone I despise might use or distribute the font..
        /// </summary>
        public static string copyright_no {
            get {
                return ResourceManager.GetString("copyright_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppose someone you despise uses or distributes your font without first having negotiated an agreement with you. Do you want this to be illegal?
        ///
        ///(“Someone you despise” can be a person or an organization, e.g. for-profit, political, military, religious, local or global. Please also imagine that they want to use your font for purposes that are legal but that you personally despise, e.g. commercially, for propaganda purposes, in war, in trade with dictatorships, etc.).
        /// </summary>
        public static string copyright_question {
            get {
                return ResourceManager.GetString("copyright_question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes, I want them to be forced to negotiate with me for the right to use or distribute my font. I want to be able to decide who gets to use the font, and make decisions on a case-by-case basis..
        /// </summary>
        public static string copyright_yes {
            get {
                return ResourceManager.GetString("copyright_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No, I want my font to be distributed and come to use, even if it carries the risk of someone I despise making changes that I despise..
        /// </summary>
        public static string derivative_no {
            get {
                return ResourceManager.GetString("derivative_no", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Suppose someone you despise uses your font in some context. They have made their own changes to your font, such as changing some shapes or adding glyphs. You despise the changes, possibly because you think it misrepresents your work, or because the changes go against your sense of aesthetics. Do you want this to be illegal?.
        /// </summary>
        public static string derivative_question {
            get {
                return ResourceManager.GetString("derivative_question", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes, in order to use my font, I want them to be prevented from making changes. My font should be kept untouched..
        /// </summary>
        public static string derivative_yes {
            get {
                return ResourceManager.GetString("derivative_yes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to For full control, you should rely on the copyright that applies by default to all works that reach the threshold of originality. Almost all countries have signed agreements to enforce copyright laws with certain minimum protections, and to respect copyright in each other&apos;s countries. A creator of a work, such as a font, automatically has at least 50 years of exclusive economic and moral rights to determine how the work is copied and distributed, provided it is sufficiently original.
        ///
        ///Normal copyright appl [rest of string was truncated]&quot;;.
        /// </summary>
        public static string full_copyright_explanation {
            get {
                return ResourceManager.GetString("full_copyright_explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) [year] [your name]
        ///
        ///All rights reserved. No part of this font software may be reproduced,
        ///distributed, or transmitted in any form or by any means whatsoever,
        ///including photocopying, recording, or other electronic or mechanical
        ///methods, without the prior written permission of the copyright holder,
        ///except in the case of brief quotations embodied in critical reviews and
        ///certain other noncommercial uses permitted by copyright law.
        ///
        ///THE FONT FILE FOR THIS SOFTWARE IS PROPRIETARY AND NOT LI [rest of string was truncated]&quot;;.
        /// </summary>
        public static string full_copyright_text {
            get {
                return ResourceManager.GetString("full_copyright_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No License.
        /// </summary>
        public static string full_copyright_title {
            get {
                return ResourceManager.GetString("full_copyright_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Example text to put in a LICENSE or COPYRIGHT file or the like:.
        /// </summary>
        public static string license_label {
            get {
                return ResourceManager.GetString("license_label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Open Font License, or OFL, is a font license created by the language research organization SIL, intended to be ideologically compatible with the GPL license of the software world: the user of an OFL-licensed font shall have the right to use the font for any purpose and to modify the font as needed, but if modified must distribute the font with improvements under the same license (OFL 1.1).
        ///
        ///The box below gives the full text of the OFL, but see the “Using the OFL” section of the https://scripts.sil.org [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ofl_explanation {
            get {
                return ResourceManager.GetString("ofl_explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Copyright (c) &lt;dates&gt;, &lt;Copyright Holder&gt; (&lt;URL|email&gt;),
        ///with Reserved Font Name &lt;Reserved Font Name&gt;.
        ///Copyright (c) &lt;dates&gt;, &lt;additional Copyright Holder&gt; (&lt;URL|email&gt;),
        ///with Reserved Font Name &lt;additional Reserved Font Name&gt;.
        ///Copyright (c) &lt;dates&gt;, &lt;additional Copyright Holder&gt; (&lt;URL|email&gt;).
        ///
        ///This Font Software is licensed under the SIL Open Font License, Version 1.1.
        ///This license is copied below, and is also available with a FAQ at:
        ///http://scripts.sil.org/OFL
        ///
        ///
        ///------------------------------- [rest of string was truncated]&quot;;.
        /// </summary>
        public static string ofl_text {
            get {
                return ResourceManager.GetString("ofl_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SIL Open Font License 1.1.
        /// </summary>
        public static string ofl_title {
            get {
                return ResourceManager.GetString("ofl_title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to #{0}:.
        /// </summary>
        public static string question_header {
            get {
                return ResourceManager.GetString("question_header", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If you want to allow free distribution and use — i.e. things like using the font in printed material — and distribution, but prohibit modification, the only option in the absence of suitable ready-made licenses may be a custom-written license, even though it may be difficult to express the terms in a way that both legally secures your intentions, and is sufficiently easy for users to understand. Below is a proposal intended to allow private and commercial use and distribution, but prohibit modification.
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string use_only_explanation {
            get {
                return ResourceManager.GetString("use_only_explanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Font License Agreement
        ///
        ///This license agreement (the &quot;Agreement&quot;) is a legal agreement between you
        ///(the &quot;Licensee&quot;) and [your name] (the &quot;Licensor&quot;) for the use of the
        ///[title of font] font software (the &quot;Font&quot;). By installing, copying, or
        ///otherwise using the Font, you agree to be bound by the terms of this
        ///Agreement.
        ///
        ///1. Grant of License. The Licensor grants the Licensee a non-exclusive,
        ///   non-transferable license to use the Font for any lawful purpose. The 
        ///   Licensee may install the Font on mul [rest of string was truncated]&quot;;.
        /// </summary>
        public static string use_only_text {
            get {
                return ResourceManager.GetString("use_only_text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Custom-Written License.
        /// </summary>
        public static string use_only_title {
            get {
                return ResourceManager.GetString("use_only_title", resourceCulture);
            }
        }
    }
}
